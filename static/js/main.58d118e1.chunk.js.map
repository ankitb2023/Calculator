{"version":3,"sources":["components/Styled.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","gridSpan","operation","control","equals","period","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","el","value","target","getAttribute","includes","handleOperation","compute","result","previousnumber","parseFloat","currentnumber","isNaN","String","onClick","slice","data","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58d118e1.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n   display:grid;\r\n   justify-content:center;\r\n    align-content:center;\r\n    \r\n   width:400px;\r\n   margin:10px auto;\r\n   grid-template-columns:repeat(4,100px);\r\n   grid-template-rows:minmax(120px,auto) repeat(5,100px);\r\n   box-shadow:2px 2px 10px #333;\r\n   border-radius:10px;\r\n`\r\nexport const Screen = styled.div`\r\ngrid-column:1/-1; // width\r\nbackground-color:rgba(60,64,67,0.75);\r\ndisplay:flex;\r\njustify-content:space-around;\r\nflex-direction:column;\r\npadding:10px;\r\nword-wrap:break-word;\r\nword-break:break-all;\r\ntext-align:right;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\n`\r\nexport const Previous = styled.div`\r\ncolor:rgba(255,255,255,0.75);\r\nfont-size:1.5rem;\r\n`\r\n\r\nexport const Current = styled.div`\r\ncolor: white;\r\nfont-size:2.5rem;\r\n`\r\nexport const Button = styled.div`\r\ncursor:pointer;\r\nfont-size:2rem;\r\nborder:1px outset white;\r\noutline:none;\r\ntext-align:center;\r\npadding:30px 20px;\r\nbackground-color:#e6ffff;\r\n&:hover{\r\n   background-color:rgba(255,255,255,0.9);\r\n}\r\n\r\n\r\n\r\n${({gridSpan})=> gridSpan && `grid-column:span ${gridSpan};`}\r\n\r\n${({operation})=> operation && `background-color:#cccccc;`}\r\n${({control})=> control && `background-color:#b3b3ff;`}\r\n\r\n${({equals})=> equals && `background-color:#cccccc;border-bottom-right-radius:10px;`}\r\n${({period})=> period && `background-color:#b3b3ff;border-bottom-left-radius:10px;`}\r\n\r\n\r\n`\r\n\r\n\r\n// For dynamic typing \r\n\r\n\r\n// export const Texted = styled.div`\r\n// width:500px;\r\n// height:500px;\r\n// overflow:hidden;\r\n// text-align:center;\r\n// font-size:1.2rem;\r\n// padding:150px 20px;\r\n// float:left;\r\n// color:white;\r\n// font-family: Staatliches, 'cursive';\r\n\r\n// .demo:after{\r\n//    content:'';\r\n//    animation: changetext 10s infinite linear;\r\n// \tcolor: white;\r\n//    font-family: 'Dancing Script', cursive;\r\n//    font-size:80px;\r\n// }\r\n// @keyframes changetext{\r\n// \t10%{content:\"Ankit\";}\r\n// \t60%{content: \"Rajiv\";}\r\n// \t100%{content: \"abhujeja\";}\r\n\t\r\n\r\n// }\r\n// `","import React,{useState} from 'react';\r\nimport {Button, Container,Current,Previous,Screen} from './Styled';\r\nfunction Calculator() {\r\n    const [previous,setPrevious] = useState('')\r\n    const [current,setCurrent] = useState('')  // current=variable and setCurrent= function to set current\r\n    const [operation,setOperation] = useState('')\r\n    const appendValue=(el)=>{\r\n        const value = el.target.getAttribute('data')\r\n        if(value==='.' && current.includes('.')) return\r\n        setCurrent(current+value)\r\n    }\r\n    const handleDelete =() =>{\r\n        setCurrent(String(current.slice(0,-1)))\r\n    }\r\n    const handleAllClear = () =>{\r\n        setCurrent('')\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n    const handleOperation = (el) =>{\r\n        if(current==='') return\r\n        if(previous !== ''){\r\n            let value=compute();\r\n            setPrevious(value)\r\n        }\r\n        else{\r\n            setPrevious(current)\r\n        }\r\n        setCurrent('')\r\n        setOperation(el.target.getAttribute('data'))\r\n    }\r\n    const handleEqual =() =>{\r\n        let value=compute();\r\n        if(value=== undefined || value=== null) return\r\n        setCurrent(value)\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n    const compute =() =>{\r\n        let result\r\n        let previousnumber = parseFloat(previous)\r\n        let currentnumber = parseFloat(current)\r\n        if(isNaN(previousnumber) || isNaN(currentnumber)) return\r\n        switch(operation){\r\n            case '÷':\r\n                result=previousnumber/currentnumber;\r\n                break;\r\n            case '×':\r\n                result= previousnumber*currentnumber;\r\n                break;\r\n            case '+':\r\n               result= previousnumber + currentnumber;\r\n               break;\r\n            case '-':\r\n               result= previousnumber - currentnumber;\r\n              break;   \r\n            default:\r\n                return\r\n        }\r\n        return String(result)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Screen>\r\n                <Previous>{previous} {operation}</Previous>\r\n                <Current>{current}</Current>\r\n            </Screen>\r\n\r\n            <Button onClick={handleAllClear} gridSpan={2} control >AC</Button>\r\n            <Button control onClick={handleDelete}>DEL</Button>\r\n            <Button data ={'÷'} onClick={handleOperation} operation>÷</Button>\r\n            <Button data ={'7'} onClick={appendValue}>7</Button>\r\n            <Button data ={'8'} onClick={appendValue}>8</Button>\r\n            <Button data ={'9'} onClick={appendValue}>9</Button>\r\n            <Button data ={'×'} onClick={handleOperation} operation>×</Button>\r\n            <Button data ={'4'} onClick={appendValue}>4</Button>\r\n            <Button data ={'5'} onClick={appendValue}>5</Button>\r\n            <Button data ={'6'} onClick={appendValue}>6</Button>\r\n            <Button data ={'+'} onClick={handleOperation} operation>+</Button>\r\n            <Button data ={'1'} onClick={appendValue}>1</Button>\r\n            <Button data ={'2'} onClick={appendValue}>2</Button>\r\n            <Button data ={'3'} onClick={appendValue}>3</Button>\r\n            <Button data ={'-'} onClick={handleOperation} operation>-</Button>\r\n            <Button data={'.'} period onClick={appendValue}>.</Button>\r\n            <Button data ={'0'} onClick={appendValue}>0</Button>\r\n            <Button gridSpan={2} equals onClick={handleEqual}>=</Button>\r\n            \r\n\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Calculator;\r\n","// import React from 'react'\nimport './App.css';\nimport Calculator from './components/Calculator';\n// import Text from \"./components/Text.js\";\n\nfunction App() {\n  return (\n    <div>\n     {/* <Text></Text> */}\n    <Calculator />\n    </div>\n   \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}